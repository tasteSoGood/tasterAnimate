#+title: 编写规范
#+author: taster
#+date: 2020-05-29 10:34:36 周五

在本项目中，类的编写需要注意如下的规范

* 继承

  对于没有父类的类，需要显式地说明这个类继承自 =object= ，例如

  - yes

    #+begin_src python
    class point(object):
        ...
    #+end_src

  - no

    #+begin_src python
    class point:
        ...
    #+end_src

* 变量名的定义

  对于一个类，内部的变量名 =var_name= 需要在变量名前面加上 =_= ，例如

  - yes

    #+begin_src python
    class point(object):
        def __init__(self, x, y):
            self._x = x
            self._y = y
    #+end_src

  - no

    #+begin_src python
    class point(object):
        def __init__(self, x, y):
            self.x = x
            self.y = y
    #+end_src

* 变量的获取和设置

  变量的获取和设置不能直接从外部调用，保证变量的安全性

  编写获取和设置函数的时候，不要包装成一个函数，而要使用 =@property= 和 =var_name.setter= 对函数做修饰，这样可以防止用户误用

  - yes

    #+begin_src python
    class point(object):
        def __init__(self, x, y):
            self.x = x
            self.y = y

        @property
        def x(self):
            return x

        @x.setter
        def x(self, v):
            self._x = v
    #+end_src

  - no

    #+begin_src python
    class point(object):
        def __init__(self, x, y):
            self.x = x
            self.y = y

        def get_x(self):
            return x

        @x.setter
        def set_x(self, v):
            self._x = v
    #+end_src
